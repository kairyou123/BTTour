// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourApp.Context;

namespace TourApp.Migrations
{
    [DbContext(typeof(TourContext))]
    partial class TourContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TourApp.Entity.CTChitieu", b =>
                {
                    b.Property<int>("CTId")
                        .HasColumnType("int");

                    b.Property<int>("DoanId")
                        .HasColumnType("int");

                    b.Property<string>("TienCT")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CTId", "DoanId");

                    b.HasIndex("DoanId");

                    b.ToTable("CTChiTieus");
                });

            modelBuilder.Entity("TourApp.Entity.CTDoan", b =>
                {
                    b.Property<int>("DoanId")
                        .HasColumnType("int");

                    b.Property<int>("KhachId")
                        .HasColumnType("int");

                    b.HasKey("DoanId", "KhachId");

                    b.HasIndex("KhachId");

                    b.ToTable("CTDoans");
                });

            modelBuilder.Entity("TourApp.Entity.CTTour", b =>
                {
                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<int>("DDId")
                        .HasColumnType("int");

                    b.Property<string>("ThongTin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TourId", "DDId");

                    b.HasIndex("DDId");

                    b.ToTable("CTTours");
                });

            modelBuilder.Entity("TourApp.Entity.ChiTieu", b =>
                {
                    b.Property<int>("CTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CTId");

                    b.ToTable("ChiTieus");
                });

            modelBuilder.Entity("TourApp.Entity.DiaDiem", b =>
                {
                    b.Property<int>("DDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenDD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.HasKey("DDId");

                    b.ToTable("DiaDiems");
                });

            modelBuilder.Entity("TourApp.Entity.DoanKhach", b =>
                {
                    b.Property<int>("DoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chitiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaDoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.HasKey("DoanId");

                    b.HasIndex("TourId");

                    b.ToTable("DoanKhachs");
                });

            modelBuilder.Entity("TourApp.Entity.Gia", b =>
                {
                    b.Property<int>("GiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GiaTri")
                        .HasColumnType("int");

                    b.Property<DateTime>("TGBD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TGKT")
                        .HasColumnType("datetime2");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("GiaId");

                    b.HasIndex("TourId");

                    b.ToTable("Gias");
                });

            modelBuilder.Entity("TourApp.Entity.HanhKhach", b =>
                {
                    b.Property<int>("KhachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CMND")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.HasKey("KhachId");

                    b.ToTable("HanhKhachs");
                });

            modelBuilder.Entity("TourApp.Entity.LoaiHinhDL", b =>
                {
                    b.Property<int>("LHDLId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moTa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LHDLId");

                    b.ToTable("LoaiHinhDLs");
                });

            modelBuilder.Entity("TourApp.Entity.NV_VT", b =>
                {
                    b.Property<int>("DoanId")
                        .HasColumnType("int");

                    b.Property<int>("NVId")
                        .HasColumnType("int");

                    b.Property<string>("ViTri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoanId", "NVId");

                    b.HasIndex("NVId");

                    b.ToTable("NV_VTs");
                });

            modelBuilder.Entity("TourApp.Entity.NhanVien", b =>
                {
                    b.Property<int>("NVId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaNV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.HasKey("NVId");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("TourApp.Entity.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LHDLId")
                        .HasColumnType("int");

                    b.Property<string>("MaTour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.HasKey("TourId");

                    b.HasIndex("LHDLId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("TourApp.Entity.CTChitieu", b =>
                {
                    b.HasOne("TourApp.Entity.ChiTieu", "ChiTieu")
                        .WithMany("CTChitieus")
                        .HasForeignKey("CTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourApp.Entity.DoanKhach", "DoanKhach")
                        .WithMany("CTChitieus")
                        .HasForeignKey("DoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourApp.Entity.CTDoan", b =>
                {
                    b.HasOne("TourApp.Entity.DoanKhach", "DoanKhach")
                        .WithMany("CTDoans")
                        .HasForeignKey("DoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourApp.Entity.HanhKhach", "HanhKhach")
                        .WithMany("CTDoans")
                        .HasForeignKey("KhachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourApp.Entity.CTTour", b =>
                {
                    b.HasOne("TourApp.Entity.DiaDiem", "DiaDiem")
                        .WithMany("CTTours")
                        .HasForeignKey("DDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourApp.Entity.Tour", "Tour")
                        .WithMany("CTTours")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourApp.Entity.DoanKhach", b =>
                {
                    b.HasOne("TourApp.Entity.Tour", "Tour")
                        .WithMany("DoanKhachs")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourApp.Entity.Gia", b =>
                {
                    b.HasOne("TourApp.Entity.Tour", "Tour")
                        .WithMany("Gias")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourApp.Entity.NV_VT", b =>
                {
                    b.HasOne("TourApp.Entity.DoanKhach", "DoanKhach")
                        .WithMany("NV_VTs")
                        .HasForeignKey("DoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourApp.Entity.NhanVien", "NhanVien")
                        .WithMany("NV_VTs")
                        .HasForeignKey("NVId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourApp.Entity.Tour", b =>
                {
                    b.HasOne("TourApp.Entity.LoaiHinhDL", "LHDL")
                        .WithMany("Tours")
                        .HasForeignKey("LHDLId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
